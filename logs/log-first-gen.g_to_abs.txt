2024-12-03 16:46:30 STIMELA.first-gen.g_to_abs INFO: ### validated inputs
2024-12-03 16:46:30 STIMELA.first-gen.g_to_abs INFO: cab G2abs:
2024-12-03 16:46:30 STIMELA.first-gen.g_to_abs INFO:   source = /mnt/data/iota-test/gkb.qc/G
2024-12-03 16:46:31 STIMELA.first-gen.g_to_abs INFO: using image quay.io/stimela2/quartical:0.2.5-cc0.1.3
2024-12-03 16:46:31 STIMELA.first-gen.g_to_abs INFO: selecting predefined pod type 'tiny' for job
2024-12-03 16:46:31 STIMELA.first-gen.g_to_abs INFO: setting job memory limit to 0
2024-12-03 16:46:31 STIMELA.first-gen.g_to_abs INFO: setting job CPU request to 0
2024-12-03 16:46:32 STIMELA.first-gen.g_to_abs INFO: found existing PVC 'iota-efs-pvc' of size 5Gi, status is Bound
2024-12-03 16:46:32 STIMELA.first-gen.g_to_abs INFO: starting pod buntu--first-gen--g--to--abs--fb821ac2 to run [python]
2024-12-03 16:46:36 STIMELA.first-gen.g_to_abs INFO:   pod started after 0:00:05
2024-12-03 16:46:36 STIMELA.first-gen.g_to_abs INFO: running: cd /mnt/data/iota-test; python -u -c 'import sys, json
_params = json.loads(sys.argv[1])
source = _params["source"]
import dask
import dask.array as da
from daskms.experimental.zarr import xds_to_zarr, xds_from_zarr
gain_table = '"'"'::'"'"'.join(source.rsplit('"'"'/'"'"', 1))
G = xds_from_zarr(gain_table)
for g in G:
  g['"'"'gains'"'"'] = (g.gains.dims, da.abs(g.gains.data))
abs_gain_table = gain_table.rstrip('"'"'G'"'"') + '"'"'Ga'"'"'
print(f'"'"'Writing to {abs_gain_table}'"'"')
writes = xds_to_zarr(G, abs_gain_table)
dask.compute(writes)
print('"'"'Done'"'"')
' '{"source": "/mnt/data/iota-test/gkb.qc/G"}'
# Writing to /mnt/data/iota-test/gkb.qc::Ga
# Done
2024-12-03 16:46:36 STIMELA.first-gen.g_to_abs INFO: container state is 'terminated', exit code is 0
2024-12-03 16:46:36 STIMELA.first-gen.g_to_abs INFO: [python] returns exit code 0 after 0:00:06
2024-12-03 16:46:37 STIMELA.first-gen.g_to_abs INFO: deleting pod buntu--first-gen--g--to--abs--fb821ac2
